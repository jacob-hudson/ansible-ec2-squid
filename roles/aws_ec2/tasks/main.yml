---
# tasks file for aws_ec2

- name: gather facts about Ubuntu 17.04 AMIs published by Canonical (099720109477)
  ec2_ami_facts:
    owners: 099720109477
    filters:
      name: "ubuntu/images/ubuntu-zesty-17.04-*"
  register: ec2_ami_ids

- name: capture AMI ID
  set_fact:
    ec2_ami_id: "{{ec2_ami_ids.images.0.image_id}}"

- name: gather VPC subnets
  ec2_vpc_subnet_facts:
  register: ec2_vpc_subnets

- name: Capture subnet ID
  set_fact:
    ec2_subnet_id:  "{{ ec2_vpc_subnets.subnets.0.subnet_id }}"

- name: create a new ec2 key pair, returns generated private key
  ec2_key:
    name: my_keypair
  register: ec2_private_ssh_key

- name: capture private key in a file
  copy:
    content: "{{ec2_private_ssh_key.key.private_key}}"
    dest: /tmp/ec2_key.pem
    mode: 0600
  when: ec2_private_ssh_key.key.private_key is defined

- name: get all Security Grup
  ec2_group_facts:
  register: ec2_security_grups

- name: Capture VPC ID
  set_fact:
    ec2_vpc_id: "{{ ec2_security_grups['security_groups'][0]['vpc_id'] }}"

- name: Launch EC2 instance
  ec2:
    key_name: "{{ ec2_private_ssh_key.key.name }}"
    instance_type: t2.micro
    region: "{{ aws_region }}"
    image: "ami-f4cc1de2"
    wait: yes
    count: 1
    vpc_subnet_id: "{{ ec2_subnet_id }}"
    assign_public_ip: yes
  register: ec2_results

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2_results.instances }}"

- name: Capture public IP
  set_fact:
    ec2_public_ip: "{{ ec2_results.instances.0.public_ip }}"

- name: Update inventory
  add_host:
    name: "{{ item.public_ip }}"
    groups: proxy_servers
    ansible_ssh_private_key_file: "/tmp/ec2_key.pem"
  with_items: "{{ ec2_results.instances }}"
